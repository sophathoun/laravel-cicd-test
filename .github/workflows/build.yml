# GitHub Action for Laravel with MySQL and Redis
name: API

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: "0 0 * * *"

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        php-versions: ['8.1', '8.2']
        laravel: ['^10.']
        dependencies: ["highest"]

    name: "PHP ${{ matrix.php }} - L${{ matrix.laravel }} ${{ matrix.dependencies == 'highest' && '↑' || '↓' }}"
    
    services:
      mysql:
        image: mysql:8.0.33
        env:
          MYSQL_ROOT_PASSWORD: pass
          MYSQL_DATABASE: 'laravel_cicd_testing'
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -ppass"
          --health-interval 10s
          --health-start-period 10s
          --health-timeout 5s
          --health-retries 10

      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Verify laravel_cicd_testing DB exists
        run: mysql --host 127.0.0.1 --port 3306 -uroot -ppass -e "SHOW DATABASES LIKE 'laravel_cicd_testing'"

      - name: Create 2nd Database
        run: mysql --host 127.0.0.1 --port 3306 -uroot -ppass -e "CREATE DATABASE IF NOT EXISTS laravel_cicd_testing_second;"

      - name: Verify laravel_cicd_testing DB exists
        run: mysql --host 127.0.0.1 --port 3306 -uroot -ppass -e "SHOW DATABASES LIKE 'laravel_cicd_testing_second'"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Copy Env File
        run: cp .env.testing .env

      - name: Migrate Test Database
        run: php artisan migrate --env=testing --seed --force
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}

      - name: Change Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Static Analysis via PHPStan
        run: ./vendor/bin/phpstan analyse --memory-limit=2G

      - name: Execute tests (Unit and Feature tests) via Pest
        run: vendor/bin/pest
        env:
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
